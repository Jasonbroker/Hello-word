application [ˌæplɪ'keɪʃ(ə)n]应用程式 应用、应用程序 
application framework['freɪmwɜːk] 应用程式框架、应用框架 应用程序框架 
architecture['ɑːkɪtektʃə] 架构、系统架构 体系结构 
argument ['ɑːgjʊm(ə)nt]引数（传给函式的值）。叁见 parameter 叁数、实质叁数、实叁、自变量 
array [ə'reɪ] 阵列 数组 
arrow['ærəʊ]  operator['ɔpəreitə] arrow（箭头）运算子 箭头操作符 
assembly [ə'semblɪ]装配件 
assembly language ['læŋgwɪdʒ]组合语言 汇编语言 
assert(ion) [ə'sɜːt] [ə'sɜːʃ(ə)n]断言 
assign [ə'saɪn]指派、指定、设值、赋值 赋值 
assignment [ə'saɪnm(ə)nt]指派、指定 赋值、分配 
assignment operator ['ɒpəreɪtə]指派（赋值）运算子 = 赋值操作符 
associated [ə'soʃɪetɪd]相应的、相关的 相关的、关联、相应的 
associative [ə'səʊʃɪətɪv] container [kən'teɪnə]关联式容器（对应 sequential container） 关联式容器 //atomic [ə'tɔmik]不可分割的 原子的 
attribute [ə'trɪbjuːt]属性 属性、特性 
audio ['ɔːdɪəʊ]音讯 音频 
A.I. 人工智慧 人工智能（artificial[ɑ:ti'fiʃəl]intelligence [ɪn'telɪdʒ(ə)ns]）
background ['bækgraʊnd]背景 背景（用於图形着色） 後台（用於行程） 
backward ['bækwəd] compatible [kəm'pætɪb(ə)l]回溯相容 向下兼容 
bandwidth ['bændwidθ]频宽 带宽
base [beis] class [klɑːs]基础类别 基类 
base type [taip]基础型别 (等同於 base class) 
batch [bætʃ]批次（意思是整批作业） 批处理 
benefit ['benɪfɪt]利益 收益
best [best] viable ['vaiəbl] function ['fʌŋ(k)ʃ(ə)n]最佳可行函式 最佳可行函式 （从 viable functions 中挑出的最佳吻合者） 
binary ['baɪnərɪ] search [sɜːtʃ]二分搜寻法 二分查找 
binary tree [triː]二元树 二叉树 
binary function 二元函式 双叁函数 
binary operator ['ɒpəreɪtə]二元运算子 二元操作符 
binding ['baɪndɪŋ]系结 绑定 
bit [bɪt](发音为beit)位元 位 
bit field [fiːld]位元栏 位域 
bitmap ['bɪtmæp]位元图 位图 
bitwise 以 bit 为单元逐一┅ 
bitwise copy 以 bit 为单元进行复制；位元逐一复制 位拷贝 
block [英][blɔk] [美][blɑk] 区块,区段 块、区块、语句块 
boolean ['bu:li:ən]布林值（真假值，true 或 false） 布尔值 
border ['bɔ:də]边框、框线 边框 
brace[breis] (curly ['kə:li] brace) 大括弧、大括号 花括弧、花括号 
bracket['brækit] (square [skwεə]brakcet) 中括弧、中括号 方括弧、方括号 
breakpoint ['breikpɔint]中断点 断点 
build [bild]建造、构筑、建置（MS 用语） 
build－in 内建 内置 
bus 汇流排 总线 //business ['bɪznɪs]商务,业务 业务 
buttons [bʌtəns]按钮 按钮 
byte [bait]位元组（由 8 bits 组成） 字节 
cache [kæʃ]快取 高速缓存 
call [kɔ:l]呼叫、叫用 调用 
callback ['kɔ:lbæk]回呼 回调 
call operator ['ɔpəreitə] call（函式呼叫）运算子调用操作符 （同 function call operator） 
candidate ['kændidit] function 候选函式 候选函数 （在函式多载决议程序中出现的候选函式） 
chain [tʃein]串链（例 chain of function calls） 链 
character ['kærəktə]字元 字符 
check [tʃek] box 核取方块 (i.e. check button) 复选框 
checked [tʃekt] exception [ik'sepʃən]可控式异常(Java) 
check button ['bʌtən]方钮 (i.e. check box) 复选按钮 
child [tʃaild] class 子类别（或称为derived [di'raivd] class, subtype ['sʌbtaip] 图表类型） 子类 
class [klɑ:s]类别 类 
class body 类别本体 类体 
class declaration [,deklə'reiʃən]类别宣告、类别宣告式 类声明 
class definition [,defi'niʃən]类别定义、类别定义式 类定义 
class derivation [,deri'veiʃən] list 类别衍化列 类继承列表 
class head [hed]类别表头 类头 
class hierarchy ['haiərɑ:ki]类别继承体系, 类别阶层 类层次体系 
class library ['laibrəri]类别程式库、类别库 类库 
class template ['templit]类别模板、类别范本 类模板 
class template partial ['pɑ:ʃəl] specializations ['speʃəlaiz]类别模板偏特化 类模板部分特化 
class template specializations 类别模板特化 类模板特化 
cleanup ['kli:nʌp]清理、善後 清理、清除 
client ['klaiənt]客端、客户端、客户 客户 
client－server ['sə:və]主从架构 客户/服务器 
clipboard ['klipbɔ:d]剪贴簿 剪贴板 
clone [kləun]复制 克隆 
collection [kə'lekʃən]群集 集合 
combo ['kɔmbəu] box [bɔks]复合方块、复合框 组合框 
command [kə'mɑ:nd] line [lain]命令列 命令行 (系统文字模式下的整行执行命令) 
communication [kə,mju:ni'keiʃən]通讯 通讯 
compatible [kəm'pætəbl]相容 兼容 
compile [kəm'pail]time 编译期 编译期、编译时 
compiler [kəm'pailə]编译器 编译器 
component [kəm'pəunənt]组件 组件 
composition[,kɔmpə'ziʃən]  复合、合成、组合 组合 
computer [kəm'pju:tə]电脑、计算机 计算机、电脑 
concept ['kɔnsept]概念 概念 
concrete [kən'kri:t]具象的 实在的 
concurrent [kən'kʌrənt]并行 并发 
configuration [kən,fiɡju'reiʃən]组态 配置 
connection [kə'nekʃən]连接，连线（网络,资料库） 连接 
constraint[kən'streint]  约束（条件） 
construct [kən'strʌkt]构件 构件 
container [kən'teinə]容器 容器 （存放资料的某种结构如 list, vector...） 
containment [kən'teinmənt]内含 包容 
context['kɔntekst] 背景关系、周遭环境、上下脉络 环境、上下文 
control [kən'trəul]控制元件、控件 控件 
console [kən'səul]主控台 控制台 
const ['kɔnstənt]常数（constant 的缩写，C++ 关键字）  
constant['kɔnstənt]  常数（相对於 variable） 常量 
constructor[kɔn'strʌktə]（ctor） 建构式 构造函数 （与class 同名的一种 member functions） 
copy['kɔpi] (v) 复制、拷贝 拷贝 
copy (n) 复件, 副本 
cover ['kʌvə] 涵盖 覆盖 
create [kri'eit]创建、建立、产生、生成 创建 
creation [kri:'eiʃən]产生、生成 创建 
cursor ['kə:sə]游标 光标 
custom ['kʌstəm] 订制、自定 定制 
data ['deitə]资料 数据 
database ['deitəbeis]资料库 数据库 
database schema ['ski:mə] 数据库结构纲目 
data member ['membə] 资料成员、成员变数 数据成员、成员变量 
data structure ['strʌktʃə]资料结构 数据结构 
datagram ['deitəɡræm]资料元 数据报文 
dead [ded] lock [lɔk]死结 死锁 
debug [di:'bʌɡ]除错 调试 
debugger [di:'bʌɡə]除错器 调试器 
declaration [,deklə'reiʃən]宣告、宣告式 声明 
deduction [di'dʌkʃən]推导（例：template argument deduction） 推导、推断 
default [di'fɔ:lt]预设 缺省、默认 
defer [di'fə:] 延缓 推迟 
define [di'fain]定义 预定义
definition [,defi'niʃən]定义、定义区、定义式 定义 
delegate ['deliɡeit]委派、委托、委任 委托 
delegation [,deli'ɡeiʃən] （同上） 
demarshal 反编列 散集 
dereference [di'refərəns]提领（取出指标所指物体的内容） 解叁考 
dereference operator dereference（提领）运算子 * 解叁考操作符 
derived [di'raivd] class 衍生类别 派生类 
design [di'zain] by contract [kən'trækt]契约式设计 
design [di'zain] pattern ['pætən] 设计范式、设计样式 设计模式  最近我比较喜欢「设计范式」一词 
destroy [di'strɔi] 摧毁、销毁 
destructor [di'strʌktə] 解构式 析构函数 
device [di'vais] 装置、设备 设备 
dialog ['daiəlɔɡ]对话窗、对话盒 对话框 
directive [di'rektiv] 指令（例：using directive） (编译)指示符 
directory [di'rektəri] 目录 目录 
disk [disk] 碟 盘 
dispatch [dis'pætʃ] 分派 分派 
distributed [di'stribjutid] computing [kəm'pju:tiŋ] 分布式计算 (分布式电算) 分布式计算 分散式计算 (分散式电算) 
document ['dɔkjumənt]文件 文档 
dot [dɔt] operator ['ɔpəreitə] dot（句点）运算子 . (圆)点操作符 
driver [draivə]驱动程式 驱动（程序） 
dynamic [dai'næmik] binding ['baindiŋ] 动态系结 动态绑定 
efficiency [i'fiʃənsi] 效率 效率 
efficient [i'fiʃənt]高效 高效 
end [end] user ['ju:zə]终端用户 
entity ['entəti] 物体 实体、物体 
encapsulation [in,-kæpsə'leiʃən] 封装 封装 
enclosing [in'kləuz] class 外围类别（与巢状类别 nested ['nestid]( 嵌套的) class 有关）外围类 
enum (enumeration [i,nju:mə'reiʃən]) 列举（一种 C++ 资料型别） 枚举 
enumerators [i'nju:məreitə]列举元（enum 型别中的成员） 枚举成员、枚举器 
equal ['i:kwəl] 相等 相等 
equality [i:'kwɔləti]相等性 相等性 
equality operator ['ɔpəreitə] equality（等号）运算子 == 等号操作符 
equivalence [i'kwivələns] 等价性、等同性、对等性 等价性 
equivalent [i'kwivələnt]等价、等同、对等 等价 
escape [i'skeip] code 转义码 转义码 
evaluate [i'væljueit] 评估、求值、核定 评估 
event [i'vent]事件 事件 
event driven [drivən]事件驱动的 事件驱动的 
exception 异常情况 异常 
exception declaration [,deklə'reiʃən]异常宣告（ref. C++ Primer 3/e, 11.3） 异常声明 
exception handling ['hændliŋ]异常处理、异常处理机制 异常处理、异常处理机制 
exception specification [,spesifi'keiʃən]异常规格（ref. C++ Primer 3/e, 11.4） 异常规范 
exit ['eksit]退离（指离开函式时的那一个执行点） 退出 
explicit [iks'plisit]明白的、明显的、显式 显式 
export [ik'spɔ:t]汇出 引出、导出 
expression [ik'spreʃən]运算式、算式 表达式 
facility [fə'siliti]设施、设备 设施、设备 
feature ['fi:tʃə]特性 
field ['fi:ld]栏位,资料栏（Java） 字段, 值域（Java） 
file ['fail]档案 文件 
firmware ['fə:mwεə]韧体 固件 
flag [flæɡ]旗标 标记 
flash [flæʃ] memory ['meməri]快闪记忆体 闪存 
flexibility [,fleksi'biliti]弹性 灵活性 
flush [flʌʃ]清理、扫清 刷新 
font [fɔnt]字型 字体 
form [fɔ:m]表单（programming ['prəuɡræmiŋ] 用语） 窗体 
formal ['fɔ:məl] parameter [pə'ræmitə]形式叁数 形式叁数 
forward ['fɔ:wəd] declaration [,deklə'reiʃən]前置宣告 前置声明 
forwarding ['fɔ:wədiŋ]转呼叫,转发 转发 
forwarding function ['fʌŋkʃən]转呼叫函式,转发函式 转发函数 
fractal ['fræktəl]碎形 分形 
framework ['freimwə:k]框架 框架 
full [ful] specialization [,speʃəlai'zeiʃən]全特化（ref. partial ['pɑ:ʃəl] specialization） 
function 函式、函数 函数 
function call operator ['ɔpəreitə]同 call operator 
function object['ɔbdʒikt] 函式物件（ref. C++ Primer 3/e, 12.3） 函数对象 
function overloaded ['əuvə'ləudid] resolution [,rezə'lu:ʃən]函式多载决议程序 函数重载解决（方案） 
functionality [,fʌŋkʃə'næliti]功能、机能 功能 
function template ['templit]函式模板、函式范本 函数模板 
functor ['fʌŋktə]仿函式 仿函式、函子 
game [ɡeim]游戏 游戏 
generate ['dʒenəreit]生成 
generic [dʒi'nerik]泛型、一般化的 一般化的、通用的、泛化 
generic algorithm ['ælɡəriðəm]泛型演算法 通用算法 
getter ['ɡetə] (相对於 setter) 取值函式 
global ['ɡləubəl]全域的（对应於 local） 全局的 
global object ['ɔbdʒikt]全域物件 全局对象 
global scope [skəup] resolution [,rezə'lu:ʃən] operator ['ɔpəreitə]全域生存空间（范围决议）运算子 :: 全局范围解析操作符 
group [ɡru:p]群组 
group box 群组方块 分组框 
guard [ɡɑ:d] clause [klɔ:z]卫述句 (Refactoring, p250) 卫语句 
GUI 图形介面 图形界面（Graphical ['ɡræfikəl] User Interface）
hand shaking ['ʃeikiŋ]握手协商 
handle ['hændl]识别码、识别号、号码牌、权柄 句柄 
handler ['hændlə]处理常式 处理函数 
hard [hɑ:d]－coded ['kəudid] 编死的 硬编码的 
hard－copy ['kɔpi]硬拷图 屏幕截图 
hard disk [disk]硬碟 硬盘 
hardware ['hɑ:dwεə]硬体 硬件 
hash [hæʃ] table ['teibl] 杂凑表 哈希表、散列表 
header ['hedə] file ['fail]表头档、标头档 头文件 
heap [hi:p] 堆积 堆 
hierarchy ['haiə,rɑ:ki]阶层体系 层次结构（体系） 
hook [huk]挂钩 钩子 
hyperlink ['haipəliŋk] 超链结 超链接 
icon ['aikɔn]图示、图标 图标 
IDE 整合开发环境 集成开发环境（integrated ['intiɡreitid] development [di'veləpmənt] environment [in'vaiərənmənt]）
identifier [ai'dentifaiə]识别字、识别符号 标识符 
if and only if 若且唯若 当且仅当 
Illinois [,ili'nɔi(z)]伊利诺 伊利诺斯 
image ['imidʒ]影像 图象 
immediate [i'mi:diət] base [beis]直接的（紧临的）上层 base class。 直接上层基类 
immediate derived [di'raivd]直接的（紧临的）下层 derived class。 直接下层派生类 
immutability [i,mjuitə'biləti]不变性 
immutable [i'mju:təbl] 不可变（的） 
implement ['implimənt] 实作、实现 实现 
implementation [,implimen'teiʃən]实作品、实作体、实作码、实件 实现 
implicit [im'plisit] 隐喻的、暗自的、隐式 隐式 
import [im'pɔ:t]汇入 导入 
increment ['inkrimənt] operator ['ɔpəreitə] 累加运算子 ++ 增加操作符 
infinite ['infinət] loop [lu:p]无穷回圈 无限循环 
infinite recursive [ri'kə:siv] 无穷递回 无限递归 
information [,infə'meiʃən]资讯 信息 
infrastructure ['infrə,strʌktʃə]公共基础建设 
inheritance [in'heritəns]继承、继承机制 继承、继承机制 
inline ['in,lain]行内 内联 
inline expansion [ik'spænʃən]行内展开 内联展开 
initialization [i,niʃəlai'zeiʃən] 初始化（动作） 初始化 
initialization list 初值列 初始值列表 
initialize [i'niʃəlaiz] 初始化 初始化 
inner ['inə] class 内隐类别 内嵌类 
instance ['instəns]实体 实例 （根据某种表述而实际产生的「东西」） 
instantiated 具现化、实体化（常应用於 template） 实例化 
instantiation [in,stænʃieiʃən] 具现体、具现化实体（常应用於 template） 实例 
integer ['intidʒə] (integral ['intiɡrəl]) 整数（的） 整型（的） 
integrate ['intiɡreit]整合 集成 
interacts [ɪntər'ækt]交谈、互动 交互 
interface ['intəfeis]介面 接口 
for GUI （Graphical ['ɡræfikəl] User Interface）介面 界面 
interpreter [in'tə:pritə]直译器 解释器 
invariants [in'vɛəriənt]恒常性,约束条件 约束条件 
invoke [in'vəuk]唤起 调用 
iterate ['itəreit]迭代（回圈一个轮回一个轮回地进行） 迭代  
iterative ['itərətiv] 反覆的，迭代的 
iterator [ɪtə'reɪtə]迭代器（一种泛型指标） 迭代器 
iteration [,itə'reiʃən]迭代（回圈每次轮回称为一个 iteration） 迭代 
item ['aitəm] 项目、条款 项、条款、项目 
laser ['leizə]雷射 激光 
level ['levəl]阶 层 (级) 例 high level 高阶 高层 
library ['laibrəri] 程式库、函式库 库、函数库 
lifetime ['laiftaim]生命期、寿命 生命期、寿命 
link [liŋk] 联结、连结 连接,链接 
linker ['liŋkə] 联结器、连结器 连接器 
literal ['litərəl] constant ['kɔnstənt]字面常数（例 3.14 或 "hi" 这等常数值） 字面常数 
list 串列（linked－list） 列表、表、链表 
list box 列表方块、列表框 列表框 
load [ləud] 载入 装载 
loader ['ləudə]载入器 装载器、载入器 
local ['ləukəl]区域的（对应於 global） 局部的 
local object 区域物件 局部对象 
lock [lɔk] 机锁 
loop [lu:p] 回圈 循环 
lvalue 左值 左值 
macro ['mækrəu]巨集 宏 
magic ['mædʒik] number 魔术数字 魔法数 
maintain [mein'tein]维护 维护 
manipulator [mə'nipjuleitə] 操纵器（iostream [stri:m]预先定义的一种东西） 操纵器 
marshal ['mɑ:ʃəl]编列 列集 叁考 demarshal 
mechanism ['mekənizəm]机制 机制 
member ['membə]成员 成员 
member access operator 成员取用运算子（有 dot 和 arrow 两种） 成员存取操作符 
member function 成员函式 成员函数 
member initialization [i,niʃəlai'zeiʃən] list 成员初值列 成员初始值列表 
memberwise [waiz] 以 member 为单元┅、members 逐一┅ 以成员为单位 
memberwise copy 以 members 为单元逐一复制 
memory ['meməri] 记忆体 内存 
menu ['menju]表单、选单 菜单 
message ['mesidʒ]讯息 消息 
message based [beist] 以讯息为基础的 基於消息的 
message loop [lu:p] 讯息回圈 消息环 
method (java) 方法、行为、函式 方法 
meta－ 超－ 元－ 	例 meta－programming 超编程 元编程 
micro ['maikrəu]微 微 
middleware ['midlweə]中介层 中间件 
modeling ['mɔdəliŋ] 模塑 
modeling language ['læŋɡwidʒ]塑模语言，建模语言 
modem ['məudem] 数据机 调制解调器 
module ['mɔdju:l]模组 模块 
modifier ['mɔdifaiə] 饰词 修饰符 
most derived [di'raivd] class 最末层衍生类别 最底层的派生类 
mouse [maus]滑鼠 鼠标 
mutable ['mju:təbl] 可变的 可变的 
multi－tasking ['mʌlti] ['tɑ:skiŋ]多工 多任务 
namespace ['neimspeis]命名空间 名字空间、命名空间 
native ['neitiv]原生的 本地的、固有的 
nested ['nestid] class 巢状类别 嵌套类 
network ['netwə:k]网路 网络 
network card 网路卡 网卡 
object 物件 对象 
object based[beist] 以物件为基础的 基於对象的 
object file ['fail]目的档 目标文件 
object model ['mɔdəl]物件模型 对象模型 
object oriented ['ɔ:rientid]物件导向的 面向对象的 
online ['ɔnlain]线上 在线 
opaque [əu'peik]不透明的 
operand ['ɔpərænd] 运算元 操作数 
operating ['ɔpəreitiŋ] system ['sistəm] (OS) 作业系统 操作系统 
operation [,ɔpə'reiʃən] 操作、操作行为 操作 
operator ['ɔpəreitə]运算子 操作符、运算符 
option ['ɔpʃən]选项，可选方案 选项 
ordinary ['ɔ:dinəri]常规的 常规的 
overflow 上限溢位（相对於 underflow） 溢出（underflow:下溢） 
overhead 额外负担、额外开销 额外开销 
overload [,əuvə'ləud] 多载化、多载化、重载 重载 
overloaded ['əuvə'ləudid] function 多载化函式 重载的函数 
overloaded operator 多载化运算子 被重载的操作符 
overloaded set 多载集合 重载集合 
override [,əuvə'raid] 改写、覆写 重载、改写、重新定义 （在 derived class 中重新定义虚拟函式 
package ['pækidʒ]套件 包 
pair [pεə]对组 
palette ['pælit]调色盘、组件盘、工具箱 
pane [pein]窗格 窗格 有时为嵌板之意，例 Java Content Pane） 
parallel ['pærəlel]平行 并行 
parameter [pə'ræmitə]叁数（函式叁数列上的变数） 叁数、形式叁数、形叁 
parameter list 叁数列 叁数列表 
parent ['pεərənt] class 父类别（或称 base class） 父类 
parentheses [pə'renθəsɪz]小括弧、小括号 圆括弧、圆括号 
parse [pɑ:z]解析 解析 
part 零件 部件 
partial ['pɑ:ʃəl] specialization [,speʃəlai'zeiʃən] 偏特化（ref. C++ Primer 3/e, 16.10） 局部特化 （ref. full specialization） 
pass by address [ə'dres]传址（函式引数的传递方式）（非正式用语）传地址 
pass by reference ['refərəns]传址（函式引数的一种传递方式） 传地址, 按引用传递 
pass by value 传值（函式引数的一种传递方式） 按值传递 
pattern ['pætən]范式、样式 模式 
performance [pə'fɔ:məns]效率、性能兼而有之 性能 
persistence [pə'sistəns]永续性 持久性 
pixel ['piksəl] 图素、像素 像素 
placement delete ref [ref]. C++ Primer 3/e, 15.8.2  
placement new ref. C++ Primer 3/e, 15.8.2 
platform 平台 平台 
pointer ['pɔintə]指标 指针 址位器（和址叁器 reference 形成对映，满好） 
poll [pəul]轮询 轮询 
polymorphism [pɔli'mɔ:fizəm]多型 多态 
pop[pɔp] up [ʌp]冒起式、弹出式 弹出式 
port [pɔ:t]埠 端口 
postfix['pəustfiks] 後置式、後序式 後置式 
precedence ['presidəns]优先序（通常用於运算子的优先执行次序） 
prefix [,pri:'fiks]前置式、前序式 前置式 
preprocessor [pri:'prəusesə]前处理器 预处理器 
prime [praim]质数 素数 
primitive['primitiv] type 基本型别 (不同於 base class,基础类别) 
print[print] 列印 打印 
printer ['printə]印表机 打印机 
priority [prai'ɔrəti]优先权 (通常用於执行绪获得 CPU 时间的优先次序） 
procedure [prə'si:dʒə]程序 过程 
procedural [prə'si:dʒərəl]程序性的、程序式的 过程式的、过程化的 
process ['prəuses]行程 进程 
profile ['prəufail]评测 评测 
profiler ['prəufailə]效能（效率）评测器 效能（性能）评测器 
programmer ['prəuɡræmə]程式员 程序员 
programming ['prəuɡræmiŋ]编程、程式设计、程式化 编程 
progress ['prəuɡres bar [bɑ:]进度指示器 进度指示器 
project ['prɔdʒekt]专案 项目、工程 
property ['prɔpəti]属性 
protocol ['prəutəkɔl]协定 协议 
pseudo ['psju:dəu] code [kəud]假码、虚拟码、伪码 伪码 
qualified ['kwɔlifaid]经过资格修饰（例如加上 scope 运算子） 限定 
qualifier ['kwɔlifaiə]资格修饰词、饰词 限定修饰词 
quality ['kwɔləti]品质 质量 
queue [kju:]伫列 队列 
radian ['reidiən] 径度 弧度 
radio ['reidiəu] button 圆钮 单选按钮 
raise [reiz]引发（常用来表示发出一个 exception） 引起、引发 
random ['rændəm] number ['nʌmbə]随机数、乱数 随机数 
range [reindʒ]范围、区间（用於 STL 时） 范围、区间 
rank [ræŋk]等级、分等（ref. C++Primer 3/e 9,15章） 等级 
raw [rɔ:]生鲜的、未经处理的 未经处理的 
record [ri'kɔ:d] 记录 记录 
recordset ['rekɔdset]记录集 记录集 
recursive [ri'kə:siv] 递回 递归 
re－direction [di'rekʃən] 重导向 重定向 
refactoring 重构、重整 重构 
refer [ri'fə:]取用 叁考 
refer to 指向、指涉、指代 
reference ['refərəns] （C++ 中类似指标的东西，相当於 "化身"） 引用、叁考址叁器, see pointer 
register ['redʒistə]暂存器 寄存器 
reflection [re'flekʃən] 反射 反射、映像 
relational [ri'leiʃənəl] database 关联式资料库 关系数据库 
represent [,repri'zent]表述，表现 表述，表现 
resolve [ri'zɔlv]决议（为算式中的符号名称寻找 解析对应之宣告式的过程） 
resolution [,rezə'lu:ʃən]决议程序、决议过程 解析过程 
resolution 解析度 分辨率 
restriction [ri'strikʃən]局限 
return 传回、回返 返回 
return type 回返型别 返回类型 
return value 回返值 返回值 
robust [rəu'bʌst] 强固、稳健 健壮 
robustness [rəʊ'bʌstnɪs]强固性、稳健性 健壮性 
routine [ru:'ti:n] 常式 例程 
runtime [rʌn'taim] 执行期 运行期、运行时 
common ['kɔmən] language ['læŋɡwidʒ] runtime (CLR) 译为「通用语言执行层」 
rvalue 右值 右值 
save 储存 存储 
schedule ['skedʒu:əl]排程 调度 
scheduler 排程器 调度程序 
scheme [ski:m] 结构纲目、组织纲目 
scroll [skrəul] bar 卷轴 滚动条 
scope [skəup] 生存空间、生存范围、范畴、作用域 生存空间 
scope operator ['ɔpəreitə] 生存空间（范围决议）运算子 :: 生存空间操作符 
scope resolution [,rezə'lu:ʃən ]operator 生存空间决议运算子 生存空间解析操作符 （与scope operator同） 
screen [skri:n] 萤幕 屏幕 
search [sə:tʃ]搜寻 查找 
semantics [si'mæntiks] 语意 语义 
sequential [si'kwenʃəl] container [kən'teinə]序列式容器 顺序式容器 （对应於 associative [ə'səuʃjətiv] container） 
server 伺服器、伺服端 服务器、服务端 
serial ['siəriəl] 串行 
serialization [,siəriəlai'zeiʃən] 次第读写,序列化 序列化 
(serialize) ['siəriəlaiz]
setter (相对於 getter) 设值函式 
signal ['siɡnəl]信号 
signature ['signətʃə]标记式、签名式、署名式 签名 
slider ['slaidə] 滚轴 滑块 
slot [slɔt]条孔、槽 槽  
smart[smɑ:t] pointer 灵巧指标、精灵指标 智能指针 
snapshot ['snæpʃɔt] 萤幕快照（图） 屏幕截图 
specialization [,speʃəlai'zeiʃən] 特殊化、特殊化定义、特殊化宣告 特化 
specification [,spesifi'keiʃən]规格 规格、规范 
splitter ['splitə]分裂视窗 切分窗口 
software 软体 软件 
solution [sə'lju:ʃən] 解法,解决方案 方案 
source 原始码 源码、源代码 
stack [stæk](d)堆叠 栈 
stack unwinding [ʌn'waindiʃ]堆叠辗转开解（此词用於 exception 主题） 栈辗转开解 * 
standard ['stændəd library ['laibrəri] 标准程式库 
standard template library 标准模板程式库 
statement ['steitmənt]述句 语句、声明 
status ['steitəs ]bar 状态列、状态栏 状态条 
STL 见 standard ['stændəd] template ['templit] library ['laibrəri] 
stream [stri:m]资料流、串流 流 
string [stri:m]字串 字符串 
subroutine [sʌbru:'ti:n] 子程序调用序列
subscript ['sʌbskript] operator 下标运算子 [ ] 下标操作符 
subtype ['sʌbtaip]子型别 子类型 
support [sə'pɔ:t]支援 支持 
suspend [sə'spend]虚悬 挂起 
symbol ['simbəl]符号 记号 
syntax ['sintæks]语法 语法 
tag [tæɡ] 标签 标记 索引标签,页签 
target ['tɑ:ɡit]标的（例 target pointer ['pɔintə]：标的指标） 目标 
task [tɑ:sk] switch [switʃ]工作切换 任务切换 
template ['templit]模板、范本 模板 
template argument deduction [di'dʌkʃən]模板引数推导 模板叁数推导
template explicit [ik'splisit] specialization [,speʃəlai'zeiʃən]模板显式特化（版本） 模板显式特化 
template parameter [pə'ræmitə] 模板叁数 模板叁数 
temporary ['tempərəri] object 暂时物件 临时对象 
text[tekst] 文字 文本 
text file ['fail]程式本文档（放置程式原始码的档案） 文本文件 
thread [θred] 执行绪 线程 
thread safe [seif]多绪安全 多线程安全 
throw [θrəu] 丢掷（常指发出一个 exception） 丢掷、引发 
token ['təukən]语汇单元 符号、标记 
transaction [træn'zækʃən]交易 事务 
transparent(ly) [træns'pærənt] 透通的(地) 
traverse ['trævəs]巡访（来回走动） 遍历 
trigger ['triɡə]触发 触发 
type [taip]型别 类型 
UML unified ['ju:nifaid] modeling ['mɒdəlɪŋ] language ['læŋgwɪdʒ] 统一建模语言 
unary ['ju:nəri] function 一元函式 单叁函数 
unary operator ['ɔpəreitə] 一元运算子 一元操作符 
underflow ['ʌndəfləu] 下限溢位（相对於 overflow） 下溢 
unchecked [ʌn'tʃekt] exception 不可控异常(Java) 
unqualified [,ʌn'kwɔlifaid]未经资格修饰（而直接取用） 
unwinding [ʌn'waindiʃ] ref [ref]. stack [stæk] unwinding [ʌn'waindiʃ]
user 使用者、用户 用户 
user interface 使用者介面、用户介面、人机介面 用户界面 
variable ['vεəriəbl] 变数（相对於常数 const） 变量 
vector ['vektə]向量（一种容器，有点类似 array） 向量、矢量 
viable ['vaiəbl]可实行的、可行的 可行的 
viable function 可行函式 可行函数 
candidate ['kændideit] functions 中挑出者
video ['vidiəu]视讯 视频 
view [vjuː] (1) 视图 (document/view) 文档/视图  view (2) 映件 
virtual ['və:tʃuəl] function 虚拟函式 虚函数 
virtual machine [mə'ʃi:n] 虚拟机器 虚拟机 
virtual memory ['meməri]虚拟记忆体 虚内存, 虚存 
volatile ['vɔlətail]易挥发的、易变的 
vowel ['vauəl]母音 元音字母 
window ['windəu] 视窗 窗口 
window function 视窗函式 窗口函数 
window procedure [prə'si:dʒə] 视窗函式 窗口过程 
word [wə:d]字 单词 
word processor ['prəusesə] 文书处理器 字处理器 
wrapper ['ræpə] 外覆、外包 包装absence 缺席
access ['ækses]访问存取通路进入
achieve [ə'tʃi:v]实现完成
acquire [ə'kwaiə]获得
adjacency[ə'dʒeisənsi] list method ['meθəd]邻接表表示法
adjacency matrix ['meitriks] method 邻接矩阵表示法
algorithm ['ælɡəriðəm] 算法
allocate ['æləukeit] 留下分配
analog ['ænəlɔɡ]推论
append [ə'pend] 添加
archive ['ɑ:kaiv] 档案归档
array [ə'rei] 数组
assign [ə'sain]分配
assume [ə'sju:m] 假设
assurance [ə'ʃuərəns]确信信任
ATM(asynchronous [ei'siŋkrənəs] transfer [træns'fə:] mode [məud]) 异步传输模式
real ['riəl] programs kernels ['kə:nəlz] 实程序核心程序
toy [tɔi] benchmark ['bentʃmɑ:k] synthetic [sin'θetik] benchmark 简单基准程序复合基准程序
balance ['bæləns] 平衡
bandwidth ['bændwidθ]带宽
batch [bætʃ]一批一组
benchmark ['bentʃmɑ:k]基准测试程序
best-fit algorithm ['ælɡəriðəm] 最佳适应算法
BFS(breadth [bredθ] first search [sə:tʃ]) 广度优先搜索法
binary ['bainəri]二进制
binary relation [ri'leiʃən]二元关系
binary tree 二叉树
bit series ['siəri:z] 比特序列
black [blæk] -box white [hwait] -box 黑盒白盒
block miss [mis] 块失效
blocked [blɔkt] 阻塞(等待状态也称阻塞或封锁状态)
boundary ['baundəri]界线分界
bridge [bridʒ]网桥
bubble ['bʌbl] sort [sɔ:t]冒泡排序
calculation [,kælkju:leiʃən] 计算
candidate ['kændideit] key 候选键(辅键)
capability [,keipə'biləti] 能力才能
capacity [kə'pæsəti] 容量
cartesian [kɑ:'tiziən] product ['prɔdəkt] 笛卡尔积
CASE(commputer aided software engineering) 计算机辅助软件工程
CCP(communication [kə,mju:ni'keiʃən] control [kən'trəul] processor ['prəusesə]) 通信控制处理机
cell [sel]信元
characteristic [,kærəktə'ristik]特征特性
circuit ['sə:kit] switching ['switʃiŋ] 线路交换
circular ['sə:kjulə] wait [weit] 循环等待
CISC(complex ['kɔmpleks] instruction [in'strʌkʃən] set computer [kəm'pju:tə]) 复杂指令集计算机
class 类
Client/Server 客户机/服务器
clock [klɔk] cycle ['saikl] clock rate [reit] 时钟周期时钟频率
coaxial ['kəu'æksəl] cable ['keibl] 同轴电缆
cohesion [kəu'hi:ʒən] coupling ['kʌpliŋ] 内聚耦合
coincidental [kəu,insi'dentəl] logical ['lɔdʒikəl] procedural [prə'si:dʒərəl] functional ['fʌŋkʃənl]偶然内聚逻辑内聚过程内聚功能内聚
combination [,kɔmbi'neiʃən]联合配合
common ['kɔmən]公用的共同的
communication [kə,mju:ni'keiʃən] 通信
complement ['kɔmplimənt] number 补码
component [kəm'pəunənt] 成分
concept ['kɔnsept]概念观念
condition [kən'diʃən]情况状况
conform [kən'fɔ:m]符合
consist [kən'sist] 组成存在
constrain [kən'strein]约束
contain [kən'tein]包含
correspond [,kɔ:ri'spɔnd] (corresponding) 相符合(相应的一致的)
CPETT 计算机性能评价工具与技术
CPI 每条指令需要的周期数
CSMA/CD 带冲突检测的载波监听多路访问
cursor ['kə:sə] 游标
cyclic ['saiklik] redundancy [rɪ'dʌnd(ə)nsɪ] check [tʃek] 循环冗余校验
database: integrity [in'teɡrəti] consistency [kən'sistənsi] restory 完整性一致性可恢复性
database: security [si'kjuəriti] efficiency [i'fiʃənsi] 数据库设计的目标: 安全性效率
deadlock ['dedlɔk]: mutual ['mju:tʃuəl] exclusion [ik'sklu:ʒən]死锁条件: 互斥
deadlock: circular ['sə:kjulə] wait no preemption [pri'empʃən]死锁条件: 循环等待狗熊先权
decimal ['desiməl] 十进位的
decision 决定判断
decomposition [,di:kɔmpə'ziʃən]双重的混合的
decrease [di'kri:s] 减少
definition [,defi'niʃən] 定义
definition phase [feiz] 定义阶段
demonstrate ['demənstreit]证明
design[di'zain] phase [feiz] 设计阶段
determine [di'tə:min]限定
development phase 开发阶段
DFS(depth[depθ] first[fə:st]search[sə:tʃ]) 深度优先搜索法
diagram['daiəɡræm] 图表
Difference['difərəns] Manchester['mæntʃistə] 差分曼彻斯特
directed[di'rektid] graph[ɡræf] undirected[,ʌndi'rektid] graph 有向图无向图
distinguish[dis'tiŋɡwiʃ] 辩认区别
distributed[di'stribjutid] system 分布式系统
divide [di'vaid] division[di'viʒən] 分开除除法
divide union['ju:niən] intersection[,intə'sekʃən] difference 除并交差
document['dɔkjumənt] 文件文档
DQDB(distributed[di'stribjutid] queue[kju:] dual['dju:əl] bus) 分布队列双总线
draw [drɔ:]绘制
dual ['dju:əl]二元的双的
dynamic[dai'næmik] design[di'zain] process['prəuses] 动态定义过程
element ['elimənt]元素要素
elevator['eliveitə] (scan[skæn]) algorithm ['ælɡəriðəm]电梯算法又称扫描算法
encapsulation [in,-kæpsə'leiʃən] inheritance[in'heritəns]  封装(压缩) 继承(遗传)
encode [en'kəud]译成密码
entity ['entəti] 实体
entity integrity [in'teɡrəti] rule [ru:l] 实体完整性规则 
equal ['i:kwəl]相等的
equation [i'kweiʒən] 方程式等式
estimate ['estimeit] 估计判断
Ethernet ['i:θə,net] 以太网
evolution [,i:və'lu:ʃən] 发展演化
exceed [ik'si:d]超过
exchange [iks'tʃeindʒ] sort 交换排序
exclusive [ik'sklu:siv] locks 排它锁(简记为X 锁)
execute ['eksikju:t] 实现执行
exhibit [iɡ'zibit]表现展示陈列
existence [iɡ'zistəns]存在发生
expertise [,ekspə:'ti:z]专门技术
external [ik'stə:nəl] (internal [in'tə:nəl]) fragmentation [,fræɡmen'teiʃən] 外(内)碎片
fault [fɔ:lt] page fault 中断过错页中断
FDDI(fiber ['faibə]  distributed [di'stribjutid]  data interface) 光纤分布式数据接口
FDM(frequency ['frikwənsi]division [di'viʒən] multiplexing ['mʌltipleksiŋ]频分多路复用
fiber ['faibə] optic ['ɔptik] cable ['keibl] 光缆
FIFO replacement [ri'pleismənt]policy ['pɔlisi] 先进先出替换算法
figure ['fiɡə]数字图形
final ['fainl]最后的最终的
first normal form 第一范式 
floppy ['flɔpi] 活动盘片(软盘)
foreign key domain [dəu'mein] tuple ['tʌpl] 外来键值域元组
form [fɔ:m]形状形式
formula ['fɔ:mjulə]公式表达式
foundation [faun'deiʃən]基础根据基金
frame page frame 帧结构页结构
frequency ['frikwənsi]频率
FTP 文件传送服务
function 函数
functionally dependent [di'pendənt]函数依赖
gateway ['ɡeitwei] 网间连接器
gather ['ɡæðə] 聚集采集推测
general ['dʒenərəl]-purose registers 通用寄存器
generate ['dʒenəreit] 产生
grade [ɡreid]等级标准
graph [ɡrɑ:f, ɡræf] (graphic ['ɡræfik]) 图
Gopher ['gəʊfə]将用户的请求自动转换成
FTP(File Transfer[træns'fə:] Protocol ['prəʊtəkɒl])
guarantee [,ɡærən'ti:]保证确定
hash [hæʃ] table hash function collision [kə'liʒən] 哈希表哈希函数(散列函数) 碰撞
HDLC（High [haɪ] - level ['lev(ə)l] Data Link Control）面向比特型数据链路层协议
hit rate 命中率
host [həust] 主计算机
host language statement ['steitmənt]主语言语句
hypertext ['haipətekst] 超级文本
illustrate ['iləstreit] 举例说明
independent [,indi'pendənt] 独立的
index ['indeks]索引
indirect [,indi'rekt]间接的
influence ['influəns]有影响的
initially [i'niʃəli] 最初开头
insertion [in'sə:ʃən] sort [sɔ:t] 插入排序
instruction [in'strʌkʃən] format ['fɔ:mæt] 指令格式
instruction set 指令集
interface 接口分界面连接体
internal [in'tə:nəl] 内部的内在的
interrupt [,intə'rʌpt]中断
IPC 工业过程控制（Information Processing Center）；
ISAM VSAM 索引顺序存取方法虚拟存储存取方法
ISAM: （Index Sequential [sɪ'kwenʃ(ə)l] Access Mode [məʊd]）
VSAM: (Virtual ['vɜːtjʊəl] Storage ['stɔːrɪdʒ] Access Method)
join natural ['nætʃərəl] join semi ['semɪ] join 连接自然连接半连接
judgment ['dʒʌdʒmənt]判断
kernel ['kə:nəl] executive [iɡ'zekjutiv] supervisor ['sju:pəvaizə] user 核心执行管理用户
kernels ['kə:nəlz] 核心程序
key comparison [kəm'pærisən] 键(码)值比较
LAN(local area ['εəriə] network) 局域网
load 负载载入
logical ['lɔdʒikəl] functional ['fʌŋkʃənl]逻辑内聚功能内聚
longitudinal [lɔndʒi'tju:dinl]水平的
loop [lu:p] 圈环状
maintain [mein'tein]维护保养供给
maintanence [meɪn'teɪnəns] phase [feiz] 维护(保养)阶段
MAN(metropolitan [ˌmetrə'pɒlɪtən] area network) 城域网
Manchester ['mæntʃistə]曼彻斯特
map [mæp]地图映射图
matrix ['meitriks]矩阵点阵
memory reference ['refərəns] 存储器参量
message switching ['switʃiŋ]报文交换
method 方法技巧
MFLOP(million ['miljən] floating point operate ['ɔpəreit] p s 每秒百万次浮点运算
minimum ['miniməm] 最小的
MIPS(millions of instructions per second 每秒百万条指令
module ['mɔdju:l]单位基准
monitor ['mɔnitə] (model ['mɔdəl] benchmark ['bentʃmɑ:k] physcal['fɪzɪkl]) method 监视(模型基准物理)法
multilevel [,mʌlti'levəl] data flow [fləu] chart [tʃɑ:t] 分层数据流图
multiple ['mʌltipl] 复合的多样的
multiple-term formula ['fɔ:mjulə] 多项式
multiplexing ['mʌltipleksiŋ] 多路复用技术
multiplication [,mʌltipli'keiʃən]乘法
mutual ['mju:tʃuəl] exclusion [ik'sklu:ʒən] 互相排斥
non-key attributes [ə'tribju:t] 非码属性
null 零空
Nyquist 奈奎斯特
object oriented ['ɔ:rientid] 对象趋向的使适应的
object oriented analysis [ə'næləsis] 面向对象的分析
object oriented databases 面向对象数据库
object oriented design [di'zain] 面向对象的设计
object oriented implementation [,implimen'teiʃən]面向对象的实现
obtain [əb'tein] 获得
occupy ['ɔkjupai] 占有居住于
occurrence [ə'kə:rəns] 事件
odd [ɔd] 奇数的 even['i:vən]偶数
one-dimensional [di'menʃənəl] array 一维数组
OODB(object oriented ['ɔ:rientid] data base) 面向对象数据库
OOM(object oriented method) 面向对象的方法
oom: information object message class 信息对象消息类
oom: instance method message passing ['pɑ:siŋ] 实例方法消息传递
open system 开放系统
operand ['ɔpərænd] 操作数
optimized ['ɔptimaizd] 尽量充分利用
optional ['ɔpʃənəl]任选的非强制的
organize ['ɔ:ɡənaiz]组织
overflow [,əuvə'fləu] 溢出
overlapping [,əuvə'læpiŋ] register ['redʒistə] windows 重叠寄存器窗口
packet ['pækit] switching ['switʃiŋ] 报文分组交换
page fault [fɔ:lt] 页面失效
page replacement [ri'pleismənt] algorithm ['ælɡəriðəm] 页替换算法
paged segments['seɡmənt] 段页式管理
PCB(process control block) 进程控制块
peer entites 对等实体
perform 表演执行
period['piəriəd] 时期周期
permit [pə'mit] 许可准许
phase [feiz]阶段局面状态
physical ['fizikəl] data link network layer 物理层数据链路层网络层
pipeline ['paip,lain] 管道
platter ['plætə] track [træk] cluster ['klʌstə]面磁道簇
predicate ['predikeit]谓语
preemption [pri'empʃən] 有优先权的
prefix [,pri:'fiks ](Polish ['pɔliʃ] form) 前缀(波兰表达式)
preorder [pri:'ɔ:də] inorder postorder 前序中序后序
presentation [,prezən'teiʃən] application [,æpli'keiʃən] layer 表示层应用层
primary ['praiməri] key attributes 主码属性
principle ['prinsəpl] 原则方法
procedural [prə'si:dʒərəl] coincidental [kəu,insi'dentəl]过程内聚偶然内聚
process ['prəuses] 过程加工处理
proficient [prəu'fiʃənt]精通
program debugging [di:'bʌɡiŋ] 程序排错
projection [prəu'dʒekʃən] selection [si'lekʃən] join [dʒɔin] 投影选择连接
proposition [,prɔpə'ziʃən]主张建议陈述
protocal ['prəʊtəkɒl]协议
prototype ['prəutətaip] 原型样板
prototyping method (model ['mɔdəl]) 原型化周期(模型)
pseudo ['psju:dəu] -code 伪码(又称程序设计语言PDL)
punctuation [,pʌŋktju'eiʃən] 标点
purpose ['pə:pəs]目的意图
quality ['kwɔləti]质量品质
queue [kju:]队列
ready blocked running 就绪阻塞(等待) 运行
real page number 实页数
real programs 实程序
redirected [ri:dɪ'rekt]重定向
redundency  [rɪ'dʌndənsi]冗余
reference ['refərəns] integrity [in'teɡrəti] rule [ru:l]引用完整性规则
referred [ri'fəd] to as 把.....当作
regard [rɪ'ɡɑːd]关于
register ['redʒistə] (registry ['redʒistri]) 寄存器登记注册挂号
regularly ['reɡjələli]定期的常规的
relation [ri'leiʃən] 关系
relay ['ri:lei] 中继
reliability [ri,laiə'biləti] 可信赖的
repeater [ri'pi:tə] 中继器
replacement [ri'pleismənt] 替换
represent [,repri'zent]代表象征
request indication [,indi'keiʃən] response [ri'spɔns] confirm [kən'fə:m] 请求指示响应确认
resource [ri'sɔ:s] 资源
response [rɪ'spɒns]回答响应
RISC(reduced instruction set computer) 精简指令集计算机
robustness [rəʊ'bʌstnɪs] 健壮性
router ['rautə] 路由器
scheme [ski:m] 计划图表
sector ['sektə] head cylinder ['silində] 扇区磁头柱面
selection [si'lekʃən] sort [sɔ:t] 选择排序
semaphores['semə,fɔ:] 信号
sequence ['si:kwəns] 序列顺序
Shanon 香农
share [ʃεə] locks 共享锁(简记为S 锁)
short [ʃɔ:t] path critical ['kritikəl] path 最短路径关键路径
signal ['siɡnəl] 信号
signal-to-noise ratio ['reiʃiəu] 信噪比B/N
similar ['similə] 相似的
SISD SIMD MISD MIMD * 指令流* 数据流
SMDS 交换多兆位数据服务
software development phase [feiz] 软件开发阶段
software engineering [,endʒi'niəriŋ] 软件工程
software portability [,pɔ:tə'biləti] 软件可移植性
software requirements [ri'kwaiəmənt] specification [,spesifi'keiʃən] 软件需求说明书
solve [sɔlv] 解决
sort [sɔ:t] 种类方式分类排序
spanning ['spæniŋ] tree 跨越树(生成树)
specify ['spesəfai] 指定说明
speedup ['spi:dʌp] 加速比
SSTF(shortest ['ʃɔ:tist] -seek [si:k] -time-first) 最短寻道时间优先(磁盘调度算法)
stack [stæk] strategy ['strætidʒi] non-stack strategy 堆栈型非堆栈型
starvation [stɑ:'veiʃən] 饥饿匮乏
statement ['steitmənt]陈述
storage ['stɔridʒ] 贮藏库
store procedures [prə'si:dʒə] 存储过程
strategy ['strætidʒi] 战略兵法计划
strict [strikt] 严密的
styles [stails] 文体风格
subgroup ['sʌbɡru:p] 循环的
subset['sʌbset] 子集子设备
superclass subclass abstract class 超类子类抽象类
suppose [sə'pəuz] 假定
symbolic [sim'bɔlik] 象征的符号的
synthetic [sin'θetik] benchmark ['bentʃmɑ:k]复合基准程序
system testing 系统测试
Systolic [si'stɔlik] 脉动阵列
table 表表格桌子
TDM(time division [di'viʒən] multiplexing ['mʌltipleksiŋ]) 时分多路复用
technology [tek'nɔlədʒi] 工艺技术
terminal ['tə:minəl] 终端
testing phase [feiz] 测试阶段
theta['θi:tə] select [si'lekt] project theta join [dʒɔin] θ选择投影θ连接
time complexity [kəm'pleksiti] 时间复杂度
timestamping ['taɪmstæmpɪŋ]时标技术
Token ['təukən] Bus 令牌总线
Token Ring [riŋ] 令牌环
toy [tɔi] benchmark ['bentʃmɑ:k] 简单基准程序
transaction [træn'zækʃən] 事务记录
transmit  [træns'mɪt]传送
transport [træns'pɔ:t] layer ['leiə] session ['seʃən] layer 传输层会话层
traversal ['trævə:səl] method 遍历方法
triggers ['trigəz] store [stɔ:] procedures[prə'si:dʒə] 触发器存储过程
ORACLE 系统
underflow 下溢
unique [ju:'ni:k] 唯一的
unit ['ju:nit] system acceptance [ək'septəns] testing 单元测试系统测试确认测试
universe ['ju:nivə:s] 宇宙全世界
update [ʌp'deit] 更新
value ['vælju:] [数]值
variable ['vεəriəbl] 变量
vertical ['və:tikəl] 垂直的
vertice ['və:tisi:z] edge [edʒ] 顶点(结点) 边
via ['vaiə] 经过
virtual ['və:tʃuəl] memory ['meməri] system 虚拟存储系统
WAN(wide area ['εəriə] network) 广域网
waterfall ['wɔ:təfɔ:l] model ['mɔdəl] 瀑布模型
white [hwait] noise [nɔiz] 白噪声
write-back(copy-back) 写回法
write-through(store-through) [stɔ:] 写直达法
WWW(world [wə:ld] wide [waid] web [web]) 万维网